// Mocks generated by Mockito 5.3.2 from annotations
// in github_repos_multithread/test/ui/repos_list/repos_list_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:github_repos_multithread/data/repos_repository.dart' as _i3;
import 'package:github_repos_multithread/model/api/repos_list_response.dart'
    as _i2;
import 'package:github_repos_multithread/model/github_repo.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeReposListResponse_0 extends _i1.SmartFake
    implements _i2.ReposListResponse {
  _FakeReposListResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReposRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockReposRepository extends _i1.Mock implements _i3.ReposRepository {
  @override
  void toggleFavorites(_i4.GitHubRepo? repo) => super.noSuchMethod(
        Invocation.method(
          #toggleFavorites,
          [repo],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i4.GitHubRepo> getFavorites() => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue: <_i4.GitHubRepo>[],
        returnValueForMissingStub: <_i4.GitHubRepo>[],
      ) as List<_i4.GitHubRepo>);
  @override
  bool isFavorite(_i4.GitHubRepo? repo) => (super.noSuchMethod(
        Invocation.method(
          #isFavorite,
          [repo],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.Future<_i2.ReposListResponse> getReposList({
    String? searchQuery = r'',
    int? page = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReposList,
          [],
          {
            #searchQuery: searchQuery,
            #page: page,
          },
        ),
        returnValue:
            _i5.Future<_i2.ReposListResponse>.value(_FakeReposListResponse_0(
          this,
          Invocation.method(
            #getReposList,
            [],
            {
              #searchQuery: searchQuery,
              #page: page,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.ReposListResponse>.value(_FakeReposListResponse_0(
          this,
          Invocation.method(
            #getReposList,
            [],
            {
              #searchQuery: searchQuery,
              #page: page,
            },
          ),
        )),
      ) as _i5.Future<_i2.ReposListResponse>);
}

/// A class which mocks [ReposListResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockReposListResponse extends _i1.Mock implements _i2.ReposListResponse {
  @override
  int get totalCount => (super.noSuchMethod(
        Invocation.getter(#totalCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  bool get isSuccess => (super.noSuchMethod(
        Invocation.getter(#isSuccess),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
